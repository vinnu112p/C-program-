#include <stdio.h>
#include <stdlib.h>

struct node {
  int val;
  struct node* next;
};

struct node* head = NULL;

// INSERT AT BEGGINING

void insertAtBeg(int data) {
  struct node* ptr = (struct node*)malloc(sizeof(struct node));
  ptr->val = data;
  ptr->next = head;
  head = ptr;
  printf("%d is inserted at beg\n", data);
}

// INSERT AT ENDING

void insertAtEnd(int data) {
  struct node* ptr = (struct node*)malloc(sizeof(struct node));
  ptr->val = data;
  ptr->next = NULL;
  
  if (head == NULL) {
    head = ptr;
    printf("%d is inserted at end \n", data);
    return;
  }

  struct node* temp = head;
  while (temp->next != NULL) {
    temp = temp->next;
  }
  temp->next = ptr;
  printf("%d is inserted at end\n", data);
}

// INSERT AT SPECIFIC POSITION

void insertAtPos(int data,int pos){
  struct node* ptr = (struct node*)malloc(sizeof(struct node));
  ptr->val = data;
  
  struct node* temp1 = head;
  struct node* temp2;
  
  for(int i = 1; i < pos; i++){
    temp2 = temp1;
    temp1 = temp1->next;
  }
  
  ptr->next = temp1;
  temp2->next = ptr;
  printf("%d is inserted at %d position\n",data,pos);
}

// DELETE FROM BEGGINING

void deleteAtBeg(){
  struct node* temp = head;
  int del = head->val;
  head = head->next;
  free(temp);
  printf("%d is deleted from beg\n",del);
}

// DELETE FROM ENDING

void deleteAtEnd(){
  struct node* temp1 = head;
  struct node* temp2;
  while(temp1->next!= NULL){
    temp2 = temp1;
    temp1 = temp1->next;
  }
  int del  = temp1->val;
  temp2->next = NULL;
  free(temp1);
  printf("%d is deleted from end\n",del);
}
// DELETE FROM SPECIFIC POSITION

void deleteAtPos(int pos){
  struct node* temp1 = head;
  struct node* temp2;
  
  for(int i = 1; i < pos; i++){
    temp2 = temp1;
    temp1 = temp1->next;
  }
  int del = temp1->val;
  temp2->next = temp1->next;
  free(temp1);
  printf("%d is deleted from %d position\n",del,pos);
}
// SEARCHING AN ELEMENT

void search(int tgt){
  struct node* temp = head;
  int i = 1;
  while(temp!= NULL){
    if(temp->val == tgt){
      printf("%d found at %d pos",tgt,i);
      return;
    }
    temp = temp->next;
    i++;
  }
}

void display() {
  struct node* p = head;
  while (p != NULL) {
    printf("%d-->", p->val);
    p = p->next;
  }
  printf("NULL\n");
}

int main() {
  insertAtBeg(1);
  insertAtBeg(2);
  insertAtEnd(5);
  insertAtEnd(10);
  insertAtEnd(15);
  display();
  insertAtPos(3,3);
  display();
  deleteAtBeg();
  display();
  deleteAtEnd();
  display();
  deleteAtPos(3);
  display();
  insertAtBeg(5);
  insertAtEnd(9);
  insertAtPos(4,3);
  display();
  search(3);
  
  
  return 0;
}
