#include<stdio.h>
#define Size 5
int queue[Size];
int front = -1;
int rear = -1;

int isFull(){
  if((rear == Size-1 && front == 0) || rear == front-1){
    return 1;
  }
  return 0;
}

int isEmpty(){
  if(rear == -1 && front == -1){
    return 1;
  }
  
  return 0;
}

void enqueue(int data){
  if(isFull()){
    printf("queue is full\n");
    return;
  }else if(rear == -1 && front ==-1){
    front++;
    rear++;
    queue[rear] = data;
   
  }else if(rear == Size-1 && front!= 0){
    rear = 0;
    queue[rear] = data;
    
  }else{
    rear++;
    queue[rear] = data;
  }
   printf("%d is enqueued\n",data);
}

void dequeue(){
  if(isEmpty()){
    printf("queue is empty\n");
    return;
  }else if(rear == front){
    printf("%d is dequeued\n",queue[front]);
   front = rear = -1; 
  }else if(front < Size){
    int c = queue[front];
    front++;
  printf("%d is dequeued\n",c);
  }else{
    front = 0;
    int c = queue[front];
    front++;
    
     printf("%d is dequeued\n",c);
    
}

   
  }


void display(int queue[]) {
    if(isEmpty()) {
        printf("Queue is empty\n");
        return;
    }

    printf("Queue elements: ");
    if (front <= rear) {
        
        for (int i = front; i <= rear; i++) {
            printf("%d --> ", queue[i]);
        }
    } else {
        
        for (int i = 0; i <= rear; i++) {
            printf("%d --> ", queue[i]);
        }
        for (int i = front; i < Size; i++) {
            printf("%d --> ", queue[i]);
        }
    }
    printf("\n");
}


int main(){
   enqueue(5);
   enqueue(4);
   enqueue(3);
   enqueue(3);
   enqueue(3);
   enqueue(3);
   display(queue);
   dequeue();
   dequeue();
   enqueue(2);
   enqueue(12);
   enqueue(5);
   display(queue);
   dequeue();
   dequeue();
   dequeue();
   dequeue();
   dequeue();
   dequeue();
   
 
  
}

